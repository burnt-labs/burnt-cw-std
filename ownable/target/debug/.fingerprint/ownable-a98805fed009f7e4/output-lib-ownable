{"message":"unused imports: `Api`, `Binary`, `BlockInfo`, `CustomQuery`, `Querier`, `Storage`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":46,"byte_end":49,"line_start":2,"line_end":2,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Api, Binary, BlockInfo, CustomQuery, Deps, DepsMut, Env, MessageInfo, Querier, Storage};","highlight_start":26,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":51,"byte_end":57,"line_start":2,"line_end":2,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Api, Binary, BlockInfo, CustomQuery, Deps, DepsMut, Env, MessageInfo, Querier, Storage};","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":59,"byte_end":68,"line_start":2,"line_end":2,"column_start":39,"column_end":48,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Api, Binary, BlockInfo, CustomQuery, Deps, DepsMut, Env, MessageInfo, Querier, Storage};","highlight_start":39,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":70,"byte_end":81,"line_start":2,"line_end":2,"column_start":50,"column_end":61,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Api, Binary, BlockInfo, CustomQuery, Deps, DepsMut, Env, MessageInfo, Querier, Storage};","highlight_start":50,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":116,"byte_end":123,"line_start":2,"line_end":2,"column_start":96,"column_end":103,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Api, Binary, BlockInfo, CustomQuery, Deps, DepsMut, Env, MessageInfo, Querier, Storage};","highlight_start":96,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":125,"byte_end":132,"line_start":2,"line_end":2,"column_start":105,"column_end":112,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Api, Binary, BlockInfo, CustomQuery, Deps, DepsMut, Env, MessageInfo, Querier, Storage};","highlight_start":105,"highlight_end":112}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":44,"byte_end":81,"line_start":2,"line_end":2,"column_start":24,"column_end":61,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Api, Binary, BlockInfo, CustomQuery, Deps, DepsMut, Env, MessageInfo, Querier, Storage};","highlight_start":24,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":114,"byte_end":132,"line_start":2,"line_end":2,"column_start":94,"column_end":112,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Api, Binary, BlockInfo, CustomQuery, Deps, DepsMut, Env, MessageInfo, Querier, Storage};","highlight_start":94,"highlight_end":112}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Api`, `Binary`, `BlockInfo`, `CustomQuery`, `Querier`, `Storage`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:2:26\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cosmwasm_std::{Addr, Api, Binary, BlockInfo, CustomQuery, Deps, DepsMut, Env, MessageInfo, Querier, Storage};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"you are deriving `PartialEq` and can implement `Eq`","code":{"code":"clippy::derive_partial_eq_without_eq","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":543,"byte_end":552,"line_start":19,"line_end":19,"column_start":48,"column_end":57,"is_primary":true,"text":[{"text":"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":48,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::derive_partial_eq_without_eq)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider deriving `Eq` as well","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":543,"byte_end":552,"line_start":19,"line_end":19,"column_start":48,"column_end":57,"is_primary":true,"text":[{"text":"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":48,"highlight_end":57}],"label":null,"suggested_replacement":"PartialEq, Eq","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you are deriving `PartialEq` and can implement `Eq`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:19:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider deriving `Eq` as well: `PartialEq, Eq`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::derive_partial_eq_without_eq)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq\u001b[0m\n\n"}
{"message":"you are deriving `PartialEq` and can implement `Eq`","code":{"code":"clippy::derive_partial_eq_without_eq","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":694,"byte_end":703,"line_start":25,"line_end":25,"column_start":48,"column_end":57,"is_primary":true,"text":[{"text":"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":48,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider deriving `Eq` as well","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":694,"byte_end":703,"line_start":25,"line_end":25,"column_start":48,"column_end":57,"is_primary":true,"text":[{"text":"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":48,"highlight_end":57}],"label":null,"suggested_replacement":"PartialEq, Eq","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you are deriving `PartialEq` and can implement `Eq`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:25:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider deriving `Eq` as well: `PartialEq, Eq`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq\u001b[0m\n\n"}
{"message":"you are deriving `PartialEq` and can implement `Eq`","code":{"code":"clippy::derive_partial_eq_without_eq","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":904,"byte_end":913,"line_start":32,"line_end":32,"column_start":48,"column_end":57,"is_primary":true,"text":[{"text":"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":48,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider deriving `Eq` as well","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":904,"byte_end":913,"line_start":32,"line_end":32,"column_start":48,"column_end":57,"is_primary":true,"text":[{"text":"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":48,"highlight_end":57}],"label":null,"suggested_replacement":"PartialEq, Eq","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you are deriving `PartialEq` and can implement `Eq`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:32:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider deriving `Eq` as well: `PartialEq, Eq`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq\u001b[0m\n\n"}
{"message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 4 warnings emitted\u001b[0m\n\n"}
